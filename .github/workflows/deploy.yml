name: Build & Deploy Shinylive app to GitHub Pages

on:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true  # fast CRAN binaries on Linux

      - name: Install R packages via r-lib/actions
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          # Add anything your app/export needs. If your repo isn't an R package,
          # use extra-packages to install explicitly:
          extra-packages: |
            any::shinylive
            any::shiny
            any::DT
            any::data.table
            any::dplyr
            any::lubridate
            any::tidyr
            any::ggplot2
            any::shinycssloaders


      - name: Verify packages present
        shell: Rscript {0}
        run: |
          cat("shinylive      :", as.character(packageVersion("shinylive")) , "\n")
          cat("shiny          :", as.character(packageVersion("shiny"))     , "\n")
          cat("DT             :", as.character(packageVersion("DT"))        , "\n")
          cat("data.table     :", as.character(packageVersion("data.table")), "\n")
          cat("dplyr          :", as.character(packageVersion("dplyr"))     , "\n")
          cat("lubridate      :", as.character(packageVersion("lubridate")) , "\n")
          cat("tidyr          :", as.character(packageVersion("tidyr"))     , "\n")
          cat("tidyr          :", as.character(packageVersion("tidyr"))     , "\n")
          cat("ggplot2        :", as.character(packageVersion("ggplot2"))   , "\n")
          cat("shinycssloaders:", as.character(packageVersion("ggplot2"))   , "\n")

      - name: Export Shinylive site
        shell: Rscript {0}
        run: |
          dir.create("docs", showWarnings = FALSE)
          shinylive::export("app", "docs", wasm_packages = TRUE, max_filesize = "200M")

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
