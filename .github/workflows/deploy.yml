name: Build & Deploy Shinylive app to GitHub Pages

on:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true  # fast CRAN binaries on Linux

      - name: Install R packages via r-lib/actions
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          # Add anything your app/export needs.
          extra-packages: |
            any::shinylive
            any::shiny
            any::DT
            any::data.table
            any::dplyr
            any::lubridate
            any::tidyr
            any::ggplot2
            any::shinycssloaders
            any::cffdrs

      - name: Verify packages present
        shell: Rscript {0}
        run: |
          cat("shinylive      :", as.character(packageVersion("shinylive")), "\n")
          cat("shiny          :", as.character(packageVersion("shiny")), "\n")
          cat("DT             :", as.character(packageVersion("DT")), "\n")
          cat("data.table     :", as.character(packageVersion("data.table")), "\n")
          cat("dplyr          :", as.character(packageVersion("dplyr")), "\n")
          cat("lubridate      :", as.character(packageVersion("lubridate")), "\n")
          cat("tidyr          :", as.character(packageVersion("tidyr")), "\n")
          cat("ggplot2        :", as.character(packageVersion("ggplot2")), "\n")
          cat("shinycssloaders:", as.character(packageVersion("shinycssloaders")), "\n")
          cat("cffdrs         :", as.character(packageVersion("cffdrs")), "\n")

      - name: Export Shinylive site (with title + parent listener)
        shell: Rscript {0}
        run: |
          dir.create("docs", showWarnings = FALSE)

          # Parent-page listener to update the tab title when app posts a message
          include_head <- paste0(
            "<script>",
            "window.addEventListener('message', function(e){",
            "  if(e && e.data && e.data.type==='set-title' && typeof e.data.title==='string'){",
            "    try{ document.title = e.data.title; }catch(err){}",
            "  }",
            "}, false);",
            "</script>"
          )

          shinylive::export(
            "app", "docs",
            wasm_packages = TRUE,
            max_filesize = "200M",
            template_params = list(
              # Initial page title before your app runs (EN default)
              title = "Hourly FWI (NGâ€‘CFFDRS)",
              # Inject the parent listener into <head> of docs/index.html
              include_in_head = include_head
            )
          )

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
